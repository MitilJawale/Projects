// Generated by Dagger (https://dagger.dev).
package com.noteapp.services;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ServiceManagerModule_Bind$app_debugFactory implements Factory<IAddressManager> {
  private final Provider<ServiceManager> implProvider;

  public ServiceManagerModule_Bind$app_debugFactory(Provider<ServiceManager> implProvider) {
    this.implProvider = implProvider;
  }

  @Override
  public IAddressManager get() {
    return bind$app_debug(implProvider.get());
  }

  public static ServiceManagerModule_Bind$app_debugFactory create(
      Provider<ServiceManager> implProvider) {
    return new ServiceManagerModule_Bind$app_debugFactory(implProvider);
  }

  public static IAddressManager bind$app_debug(ServiceManager impl) {
    return Preconditions.checkNotNullFromProvides(ServiceManagerModule.INSTANCE.bind$app_debug(impl));
  }
}
