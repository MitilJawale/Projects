// Generated by Dagger (https://dagger.dev).
package com.noteapp.storage;

import android.content.Context;
import com.noteapp.authentication.IFirebaseAuthenticationManager;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class FirebaseStorageManager_Factory implements Factory<FirebaseStorageManager> {
  private final Provider<Context> contextProvider;

  private final Provider<IFirebaseAuthenticationManager> firebaseAuthenticationManagerProvider;

  public FirebaseStorageManager_Factory(Provider<Context> contextProvider,
      Provider<IFirebaseAuthenticationManager> firebaseAuthenticationManagerProvider) {
    this.contextProvider = contextProvider;
    this.firebaseAuthenticationManagerProvider = firebaseAuthenticationManagerProvider;
  }

  @Override
  public FirebaseStorageManager get() {
    return newInstance(contextProvider.get(), firebaseAuthenticationManagerProvider.get());
  }

  public static FirebaseStorageManager_Factory create(Provider<Context> contextProvider,
      Provider<IFirebaseAuthenticationManager> firebaseAuthenticationManagerProvider) {
    return new FirebaseStorageManager_Factory(contextProvider, firebaseAuthenticationManagerProvider);
  }

  public static FirebaseStorageManager newInstance(Context context,
      IFirebaseAuthenticationManager firebaseAuthenticationManager) {
    return new FirebaseStorageManager(context, firebaseAuthenticationManager);
  }
}
