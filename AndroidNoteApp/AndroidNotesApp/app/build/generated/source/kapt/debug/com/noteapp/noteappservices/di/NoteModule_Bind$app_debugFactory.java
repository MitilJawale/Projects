// Generated by Dagger (https://dagger.dev).
package com.noteapp.noteappservices.di;

import com.noteapp.noteappservices.INoteService;
import com.noteapp.noteappservices.NoteService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NoteModule_Bind$app_debugFactory implements Factory<INoteService> {
  private final Provider<NoteService> implProvider;

  public NoteModule_Bind$app_debugFactory(Provider<NoteService> implProvider) {
    this.implProvider = implProvider;
  }

  @Override
  public INoteService get() {
    return bind$app_debug(implProvider.get());
  }

  public static NoteModule_Bind$app_debugFactory create(Provider<NoteService> implProvider) {
    return new NoteModule_Bind$app_debugFactory(implProvider);
  }

  public static INoteService bind$app_debug(NoteService impl) {
    return Preconditions.checkNotNullFromProvides(NoteModule.INSTANCE.bind$app_debug(impl));
  }
}
