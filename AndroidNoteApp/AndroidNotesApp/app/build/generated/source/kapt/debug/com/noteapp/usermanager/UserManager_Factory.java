// Generated by Dagger (https://dagger.dev).
package com.noteapp.usermanager;

import android.content.ContentResolver;
import android.database.sqlite.SQLiteDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class UserManager_Factory implements Factory<UserManager> {
  private final Provider<SQLiteDatabase> dbProvider;

  private final Provider<ContentResolver> contentResolverProvider;

  public UserManager_Factory(Provider<SQLiteDatabase> dbProvider,
      Provider<ContentResolver> contentResolverProvider) {
    this.dbProvider = dbProvider;
    this.contentResolverProvider = contentResolverProvider;
  }

  @Override
  public UserManager get() {
    return newInstance(dbProvider.get(), contentResolverProvider.get());
  }

  public static UserManager_Factory create(Provider<SQLiteDatabase> dbProvider,
      Provider<ContentResolver> contentResolverProvider) {
    return new UserManager_Factory(dbProvider, contentResolverProvider);
  }

  public static UserManager newInstance(SQLiteDatabase db, ContentResolver contentResolver) {
    return new UserManager(db, contentResolver);
  }
}
