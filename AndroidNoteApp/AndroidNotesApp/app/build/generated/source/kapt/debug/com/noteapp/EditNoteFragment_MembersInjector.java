// Generated by Dagger (https://dagger.dev).
package com.noteapp;

import com.noteapp.storage.IFirebaseStorageManager;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class EditNoteFragment_MembersInjector implements MembersInjector<EditNoteFragment> {
  private final Provider<IFirebaseStorageManager> firebaseStorageManagerProvider;

  public EditNoteFragment_MembersInjector(
      Provider<IFirebaseStorageManager> firebaseStorageManagerProvider) {
    this.firebaseStorageManagerProvider = firebaseStorageManagerProvider;
  }

  public static MembersInjector<EditNoteFragment> create(
      Provider<IFirebaseStorageManager> firebaseStorageManagerProvider) {
    return new EditNoteFragment_MembersInjector(firebaseStorageManagerProvider);
  }

  @Override
  public void injectMembers(EditNoteFragment instance) {
    injectFirebaseStorageManager(instance, firebaseStorageManagerProvider.get());
  }

  @InjectedFieldSignature("com.noteapp.EditNoteFragment.firebaseStorageManager")
  public static void injectFirebaseStorageManager(EditNoteFragment instance,
      IFirebaseStorageManager firebaseStorageManager) {
    instance.firebaseStorageManager = firebaseStorageManager;
  }
}
