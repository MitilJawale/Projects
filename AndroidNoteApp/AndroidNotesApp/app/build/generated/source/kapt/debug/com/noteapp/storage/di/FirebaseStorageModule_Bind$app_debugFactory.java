// Generated by Dagger (https://dagger.dev).
package com.noteapp.storage.di;

import com.noteapp.storage.FirebaseStorageManager;
import com.noteapp.storage.IFirebaseStorageManager;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class FirebaseStorageModule_Bind$app_debugFactory implements Factory<IFirebaseStorageManager> {
  private final Provider<FirebaseStorageManager> implProvider;

  public FirebaseStorageModule_Bind$app_debugFactory(
      Provider<FirebaseStorageManager> implProvider) {
    this.implProvider = implProvider;
  }

  @Override
  public IFirebaseStorageManager get() {
    return bind$app_debug(implProvider.get());
  }

  public static FirebaseStorageModule_Bind$app_debugFactory create(
      Provider<FirebaseStorageManager> implProvider) {
    return new FirebaseStorageModule_Bind$app_debugFactory(implProvider);
  }

  public static IFirebaseStorageManager bind$app_debug(FirebaseStorageManager impl) {
    return Preconditions.checkNotNullFromProvides(FirebaseStorageModule.INSTANCE.bind$app_debug(impl));
  }
}
