// Generated by Dagger (https://dagger.dev).
package com.noteapp.authentication.di;

import com.noteapp.authentication.FirebaseAuthenticationManager;
import com.noteapp.authentication.IFirebaseAuthenticationManager;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AuthenticationModule_Bind$app_debugFactory implements Factory<IFirebaseAuthenticationManager> {
  private final Provider<FirebaseAuthenticationManager> implProvider;

  public AuthenticationModule_Bind$app_debugFactory(
      Provider<FirebaseAuthenticationManager> implProvider) {
    this.implProvider = implProvider;
  }

  @Override
  public IFirebaseAuthenticationManager get() {
    return bind$app_debug(implProvider.get());
  }

  public static AuthenticationModule_Bind$app_debugFactory create(
      Provider<FirebaseAuthenticationManager> implProvider) {
    return new AuthenticationModule_Bind$app_debugFactory(implProvider);
  }

  public static IFirebaseAuthenticationManager bind$app_debug(FirebaseAuthenticationManager impl) {
    return Preconditions.checkNotNullFromProvides(AuthenticationModule.INSTANCE.bind$app_debug(impl));
  }
}
